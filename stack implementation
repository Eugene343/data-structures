class Stack:
    MAX = 5

    def __init__(self):
        self.data = []
        self.top = -1
        self.size = 0
        self.popped = []

    def __len(self):
        return self.size

    def push(self, num):
        if self.is_full():
            print("Array Full")
        else:
            self.top += 1
            self.size += 1
            self.data.append(num)
            return self.top, self.size

    def pop(self):
        if self.is_empty():
            print("Array is empty")
        else:
            self.top -= 1
            self.size -= 1
            abt_tbp = (self.data[self.top])
            self.data.remove(self.data[self.top])
            self.popped.append(abt_tbp)
            return abt_tbp

    def peek(self):
        if not self.data:
            print("Stack is empty ")
        else:
            return self.data[-1]

    def is_empty(self):
        if not self.data:
            return True
        else:
            return False

    def is_full(self):
        if not self.MAX:
            return True
        else:
            return False


def execute():
    s = Stack()
    print("1.   Push\n"
          "2.   Pop\n"
          "3.   Print the top element\n"
          "4.   Print all the elements\n"
          "5.   Print all popped elements\n"  
          "6.   Quit")

    while True:
        choice = int(input("Please enter your choice:"))
        while choice not in range(1, 6):
            print("invalid input")
            choice = int(input("Please enter your choice:"))
        if choice == 1:
            num = input("Enter a number to add to stack")
            s.push(num)
        elif choice == 2:
            s.pop()
        elif choice == 3:
            print(s.peek())

        elif choice == 4:
            print(s.data)
        elif choice == 5:
            print(s.popped)
        elif choice == 6:
            break
    input("press any key to exit")
