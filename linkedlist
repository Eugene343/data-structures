class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def display(self):
        current_node = self.head
        while current_node:
            print(current_node.data)
            current_node = current_node.next

    def append(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        else:
            current_node = self.head
            while current_node.next:
                current_node = current_node.next
            current_node.next = new_node

    def prepend(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            new_node.next = self.head
            self.head = new_node

    def inpend(self, previous_node, data):
        if not previous_node:
            print('node not in list')
            return
        else:
            new_node = Node(data)
            new_node.next = previous_node.next
            previous_node.next = new_node



ll = LinkedList()
ll.append('a')
ll.append('b')
ll.prepend('w')
ll.inpend(ll.head.next, 'c')

ll.display()
